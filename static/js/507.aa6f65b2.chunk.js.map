{"version":3,"file":"static/js/507.aa6f65b2.chunk.js","mappings":"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","sources":["components/MoviesList/MoviesList.styled.js","components/MoviesList/MoviesList.jsx","services/api.js","components/SearchBar/SearchBar.styled.js","components/SearchBar/SearchBar.jsx","views/Movies.jsx"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const List = styled.ul``;\n\nexport const Item = styled.li``;\n\nexport const LinkItem = styled(Link)``;\n\nexport const Text = styled.p``;\n","import { Item, LinkItem, List, Text } from './MoviesList.styled';\nimport { useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nexport const MoviesList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <List>\n      {movies.map(({ id, title }) => {\n        return (\n          <Item key={id}>\n            <LinkItem to={`/movies/${id}`} state={{ from: location }}>\n              <Text>{title}</Text>\n            </LinkItem>\n          </Item>\n        );\n      })}\n    </List>\n  );\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.array.isRequired,\n};\n","import axios from 'axios';\n\nconst API_KEY = '416189c391d5281cd1997eac0a39e5bd';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const fetchTrending = async () => {\n  const response = await axios.get(`/trending/movie/day?api_key=${API_KEY}`);\n  return response.data.results;\n};\n\nexport const fetchSearchByKeyword = async keyword => {\n  const response = await axios.get(\n    `/search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${keyword}`\n  );\n  return response.data.results;\n};\n\nexport const fetchMovieDetails = async id => {\n  const response = await axios.get(\n    `/movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const fetchActors = async id => {\n  const response = await axios.get(\n    `/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data.cast;\n};\n\nexport const fetchReviews = async id => {\n  const response = await axios.get(\n    `/movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return response.data.results;\n};\n","import styled from 'styled-components';\n\nexport const SearchForm = styled.form`\n  display: flex;\n\n  margin-top: 25px;\n  gap: 10px;\n  cursor: pointer;\n`;\n\nexport const SearchInput = styled.input`\n  width: 200px;\n  padding: 5px;\n  border-bottom: 1px grey solid;\n  border-radius: 5px;\n\n  cursor: pointer;\n`;\n","import { SearchForm, SearchInput } from './SearchBar.styled';\nimport PropTypes from 'prop-types';\n\nexport const SearchBar = ({ onSubmit }) => {\n  const handleSubmit = e => {\n    e.preventDefault();\n    const searchQuery = e.target.elements.search.value.trim();\n\n    if (searchQuery.length === 0) {\n      return alert('Please, enter your request');\n    }\n\n    onSubmit(searchQuery);\n\n    e.currentTarget.reset();\n  };\n\n  return (\n    <SearchForm onSubmit={e => handleSubmit(e)}>\n      <SearchInput type=\"text\" name=\"search\" />\n      <button type=\"submit\">Search</button>\n    </SearchForm>\n  );\n};\n\nSearchBar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import { SearchBar } from 'components/SearchBar/SearchBar';\nimport { fetchSearchByKeyword } from 'services/api';\n\nconst { MoviesList } = require('components/MoviesList/MoviesList');\nconst { useEffect, useState } = require('react');\nconst { useLocation, useSearchParams } = require('react-router-dom');\n\nexport const Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const location = useLocation();\n  const searchQuery = searchParams.get('search');\n\n  useEffect(() => {\n    const fetchMoviesSearch = async () => {\n      const data = await fetchSearchByKeyword(searchQuery)\n        .then(response => response)\n        .catch(error => console.log(error));\n      setMovies(data);\n    };\n    if (searchQuery) {\n      fetchMoviesSearch();\n    }\n  }, [searchQuery]);\n\n  const submitSearch = search => {\n    setSearchParams(search !== '' ? { search } : {});\n  };\n\n  return (\n    <>\n      <SearchBar onSubmit={submitSearch} />\n      {movies && <MoviesList movies={movies} state={{ from: location }} />}\n    </>\n  );\n};\n"],"names":["List","styled","Item","LinkItem","Link","Text","MoviesList","movies","location","useLocation","map","id","title","to","state","from","API_KEY","axios","fetchTrending","response","data","results","fetchSearchByKeyword","keyword","fetchMovieDetails","fetchActors","cast","fetchReviews","SearchForm","SearchInput","SearchBar","onSubmit","handleSubmit","e","preventDefault","searchQuery","target","elements","search","value","trim","length","alert","currentTarget","reset","type","name","require","useEffect","useState","useSearchParams","Movies","setMovies","searchParams","setSearchParams","get","fetchMoviesSearch","then","catch","error","console","log"],"sourceRoot":""}