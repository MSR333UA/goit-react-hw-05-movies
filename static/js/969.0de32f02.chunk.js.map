{"version":3,"file":"static/js/969.0de32f02.chunk.js","mappings":"+SAEMA,EAAU,mCAChBC,EAAAA,EAAAA,SAAAA,QAAyB,+BAElB,IAAMC,EAAa,mCAAG,oGACJD,EAAAA,EAAAA,IAAA,sCAAyCD,IADrC,cACrBG,EADqB,yBAEpBA,EAASC,KAAKC,SAFM,2CAAH,qDAKbC,EAAoB,mCAAG,WAAMC,GAAN,uFACXN,EAAAA,EAAAA,IAAA,gCACID,EADJ,4DAC+DO,IAFpD,cAC5BJ,EAD4B,yBAI3BA,EAASC,KAAKC,SAJa,2CAAH,sDAOpBG,EAAiB,mCAAG,WAAMC,GAAN,uFACRR,EAAAA,EAAAA,IAAA,iBACXQ,EADW,oBACGT,EADH,oBADQ,cACzBG,EADyB,yBAIxBA,EAASC,MAJe,2CAAH,sDAOjBM,EAAW,mCAAG,WAAMD,GAAN,uFACFR,EAAAA,EAAAA,IAAA,iBACXQ,EADW,4BACWT,EADX,oBADE,cACnBG,EADmB,yBAIlBA,EAASC,KAAKO,MAJI,2CAAH,sDAOXC,EAAY,mCAAG,WAAMH,GAAN,uFACHR,EAAAA,EAAAA,IAAA,iBACXQ,EADW,4BACWT,EADX,2BADG,cACpBG,EADoB,yBAInBA,EAASC,KAAKC,SAJK,2CAAH,qD,8HC7BZQ,EAAOC,EAAAA,GAAAA,GAAH,uEAKJC,EAAWD,EAAAA,GAAAA,GAAH,sI,SCFRE,EAAO,WAClB,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAgCE,EAAAA,EAAAA,UAAS,IAAzC,eAAOC,EAAP,KAAiBC,EAAjB,KAMA,OAJAC,EAAAA,EAAAA,YAAU,YACRZ,EAAAA,EAAAA,IAAYO,GAASM,KAAKF,EAC3B,GAAE,CAACJ,IAEoB,IAApBG,EAASI,OACJ,MAIP,SAACX,EAAD,UACGO,EAASK,KAAI,SAAAC,GACZ,IAAQC,EAAsCD,EAAtCC,KAAMC,EAAgCF,EAAhCE,UAAWC,EAAqBH,EAArBG,aAAcpB,EAAOiB,EAAPjB,GAEvC,OACE,UAACM,EAAD,YACE,gBACEe,IAAK,mCAAqCD,EAC1CE,IAAKJ,KAEP,uBAAIA,KACJ,uCAAeC,OANFnB,EASlB,KAGN,C","sources":["services/api.js","views/Cast.styled.js","views/Cast.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '416189c391d5281cd1997eac0a39e5bd';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const fetchTrending = async () => {\n  const response = await axios.get(`/trending/movie/day?api_key=${API_KEY}`);\n  return response.data.results;\n};\n\nexport const fetchSearchByKeyword = async keyword => {\n  const response = await axios.get(\n    `/search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${keyword}`\n  );\n  return response.data.results;\n};\n\nexport const fetchMovieDetails = async id => {\n  const response = await axios.get(\n    `/movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const fetchActors = async id => {\n  const response = await axios.get(\n    `/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data.cast;\n};\n\nexport const fetchReviews = async id => {\n  const response = await axios.get(\n    `/movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return response.data.results;\n};\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  list-style: none;\n  text-decoration: none;\n`;\n\nexport const ListItem = styled.li`\n  text-decoration: none;\n  margin: 10px;\n  border: 1px gray solid;\n  padding: 5px;\n  text-align: center;\n`;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchActors } from 'services/api';\nimport { List, ListItem } from './Cast.styled';\n\nexport const Cast = () => {\n  const { movieId } = useParams();\n  const [castInfo, setCastInfo] = useState([]);\n\n  useEffect(() => {\n    fetchActors(movieId).then(setCastInfo);\n  }, [movieId]);\n\n  if (castInfo.length === 0) {\n    return null;\n  }\n\n  return (\n    <List>\n      {castInfo.map(actor => {\n        const { name, character, profile_path, id } = actor;\n\n        return (\n          <ListItem key={id}>\n            <img\n              src={'https://image.tmdb.org/t/p/w300/' + profile_path}\n              alt={name}\n            />\n            <p>{name}</p>\n            <p>Character: {character}</p>\n          </ListItem>\n        );\n      })}\n    </List>\n  );\n};\n"],"names":["API_KEY","axios","fetchTrending","response","data","results","fetchSearchByKeyword","keyword","fetchMovieDetails","id","fetchActors","cast","fetchReviews","List","styled","ListItem","Cast","movieId","useParams","useState","castInfo","setCastInfo","useEffect","then","length","map","actor","name","character","profile_path","src","alt"],"sourceRoot":""}