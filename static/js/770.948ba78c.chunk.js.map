{"version":3,"file":"static/js/770.948ba78c.chunk.js","mappings":"+SAEMA,EAAU,mCAChBC,EAAAA,EAAAA,SAAAA,QAAyB,+BAElB,IAAMC,EAAa,mCAAG,oGACJD,EAAAA,EAAAA,IAAA,sCAAyCD,IADrC,cACrBG,EADqB,yBAEpBA,EAASC,KAAKC,SAFM,2CAAH,qDAKbC,EAAoB,mCAAG,WAAMC,GAAN,uFACXN,EAAAA,EAAAA,IAAA,gCACID,EADJ,4DAC+DO,IAFpD,cAC5BJ,EAD4B,yBAI3BA,EAASC,KAAKC,SAJa,2CAAH,sDAOpBG,EAAiB,mCAAG,WAAMC,GAAN,uFACRR,EAAAA,EAAAA,IAAA,iBACXQ,EADW,oBACGT,EADH,oBADQ,cACzBG,EADyB,yBAIxBA,EAASC,MAJe,2CAAH,sDAOjBM,EAAW,mCAAG,WAAMD,GAAN,uFACFR,EAAAA,EAAAA,IAAA,iBACXQ,EADW,4BACWT,EADX,oBADE,cACnBG,EADmB,yBAIlBA,EAASC,KAAKO,MAJI,2CAAH,sDAOXC,EAAY,mCAAG,WAAMH,GAAN,uFACHR,EAAAA,EAAAA,IAAA,iBACXQ,EADW,4BACWT,EADX,2BADG,cACpBG,EADoB,yBAInBA,EAASC,KAAKC,SAJK,2CAAH,qD,mIC7BZQ,EAAgBC,EAAAA,GAAAA,IAAH,kFAMbC,EAAaD,EAAAA,GAAAA,GAAH,mFAMVE,EAAaF,EAAAA,GAAAA,GAAH,+H,SCTVG,EAAU,WACrB,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAQA,OANAC,EAAAA,EAAAA,YAAU,YACRX,EAAAA,EAAAA,IAAaM,GACVM,KAAKF,GACLG,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAhB,GACf,GAAE,CAACR,IAECG,GAKH,SAACR,EAAD,WACE,UAACE,EAAD,YACIM,EAAQQ,SAAU,iEACnBR,EAAQS,KAAI,YAA8B,IAA3BrB,EAA0B,EAA1BA,GAAIsB,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC1B,OACE,UAAChB,EAAD,YACE,wBAAKe,KACL,uBAAIC,MAFWvB,EAKpB,SAdE,IAkBV,C","sources":["services/api.js","views/Reviews.styled.js","views/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '416189c391d5281cd1997eac0a39e5bd';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const fetchTrending = async () => {\n  const response = await axios.get(`/trending/movie/day?api_key=${API_KEY}`);\n  return response.data.results;\n};\n\nexport const fetchSearchByKeyword = async keyword => {\n  const response = await axios.get(\n    `/search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${keyword}`\n  );\n  return response.data.results;\n};\n\nexport const fetchMovieDetails = async id => {\n  const response = await axios.get(\n    `/movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const fetchActors = async id => {\n  const response = await axios.get(\n    `/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data.cast;\n};\n\nexport const fetchReviews = async id => {\n  const response = await axios.get(\n    `/movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return response.data.results;\n};\n","import styled from 'styled-components';\n\nexport const WrapperReview = styled.div`\n  display: block;\n  margin-top: 15px;\n  padding: 20px;\n`;\n\nexport const ListReview = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n`;\n\nexport const ItemReview = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  padding: 5px;\n  border: 1px solid grey;\n`;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchReviews } from 'services/api';\nimport { ItemReview, ListReview, WrapperReview } from './Reviews.styled';\n\nexport const Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    fetchReviews(movieId)\n      .then(setReviews)\n      .catch(error => console.log(error));\n  }, [movieId]);\n\n  if (!reviews) {\n    return null;\n  }\n\n  return (\n    <WrapperReview>\n      <ListReview>\n        {!reviews.length && <div>There are no reviews for this movie</div>}\n        {reviews.map(({ id, author, content }) => {\n          return (\n            <ItemReview key={id}>\n              <h3>{author}</h3>\n              <p>{content}</p>\n            </ItemReview>\n          );\n        })}\n      </ListReview>\n    </WrapperReview>\n  );\n};\n"],"names":["API_KEY","axios","fetchTrending","response","data","results","fetchSearchByKeyword","keyword","fetchMovieDetails","id","fetchActors","cast","fetchReviews","WrapperReview","styled","ListReview","ItemReview","Reviews","movieId","useParams","useState","reviews","setReviews","useEffect","then","catch","error","console","log","length","map","author","content"],"sourceRoot":""}